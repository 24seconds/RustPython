use crate::pyobject::{ItemProtocol, PyObjectRef};
use crate::VirtualMachine;

pub fn make_module(vm: &VirtualMachine) -> PyObjectRef {
    let errorcode = vm.ctx.new_dict();
    let module = py_module!(vm, "errno", {
        "errorcode" => errorcode.clone(),
    });
    for (name, code) in ERROR_CODES {
        let name = vm.new_str((*name).to_owned());
        let code = vm.ctx.new_int(*code);
        errorcode.set_item(code.clone(), name.clone(), vm).unwrap();
        vm.set_attr(&module, name, code).unwrap();
    }
    module
}

#[cfg(target_os = "linux")]
const ERROR_CODES: &[(&str, i32)] = &[
    ("ENODEV", libc::ENODEV),
    ("ENOCSI", libc::ENOCSI),
    ("EHOSTUNREACH", libc::EHOSTUNREACH),
    ("ENOMSG", libc::ENOMSG),
    ("EUCLEAN", libc::EUCLEAN),
    ("EL2NSYNC", libc::EL2NSYNC),
    ("EL2HLT", libc::EL2HLT),
    ("ENODATA", libc::ENODATA),
    ("ENOTBLK", libc::ENOTBLK),
    ("ENOSYS", libc::ENOSYS),
    ("EPIPE", libc::EPIPE),
    ("EINVAL", libc::EINVAL),
    ("EOVERFLOW", libc::EOVERFLOW),
    ("EADV", libc::EADV),
    ("EINTR", libc::EINTR),
    ("EUSERS", libc::EUSERS),
    ("ENOTEMPTY", libc::ENOTEMPTY),
    ("ENOBUFS", libc::ENOBUFS),
    ("EPROTO", libc::EPROTO),
    ("EREMOTE", libc::EREMOTE),
    ("ENAVAIL", libc::ENAVAIL),
    ("ECHILD", libc::ECHILD),
    ("ELOOP", libc::ELOOP),
    ("EXDEV", libc::EXDEV),
    ("E2BIG", libc::E2BIG),
    ("ESRCH", libc::ESRCH),
    ("EMSGSIZE", libc::EMSGSIZE),
    ("EAFNOSUPPORT", libc::EAFNOSUPPORT),
    ("EBADR", libc::EBADR),
    ("EHOSTDOWN", libc::EHOSTDOWN),
    ("EPFNOSUPPORT", libc::EPFNOSUPPORT),
    ("ENOPROTOOPT", libc::ENOPROTOOPT),
    ("EBUSY", libc::EBUSY),
    ("EAGAIN", libc::EAGAIN),
    ("EBADFD", libc::EBADFD),
    ("EDOTDOT", libc::EDOTDOT),
    ("EISCONN", libc::EISCONN),
    ("ENOANO", libc::ENOANO),
    ("ESHUTDOWN", libc::ESHUTDOWN),
    ("ECHRNG", libc::ECHRNG),
    ("ELIBBAD", libc::ELIBBAD),
    ("ENONET", libc::ENONET),
    ("EBADE", libc::EBADE),
    ("EBADF", libc::EBADF),
    ("EMULTIHOP", libc::EMULTIHOP),
    ("EIO", libc::EIO),
    ("EUNATCH", libc::EUNATCH),
    ("EPROTOTYPE", libc::EPROTOTYPE),
    ("ENOSPC", libc::ENOSPC),
    ("ENOEXEC", libc::ENOEXEC),
    ("EALREADY", libc::EALREADY),
    ("ENETDOWN", libc::ENETDOWN),
    ("ENOTNAM", libc::ENOTNAM),
    ("EACCES", libc::EACCES),
    ("ELNRNG", libc::ELNRNG),
    ("EILSEQ", libc::EILSEQ),
    ("ENOTDIR", libc::ENOTDIR),
    ("ENOTUNIQ", libc::ENOTUNIQ),
    ("EPERM", libc::EPERM),
    ("EDOM", libc::EDOM),
    ("EXFULL", libc::EXFULL),
    ("ECONNREFUSED", libc::ECONNREFUSED),
    ("EISDIR", libc::EISDIR),
    ("EPROTONOSUPPORT", libc::EPROTONOSUPPORT),
    ("EROFS", libc::EROFS),
    ("EADDRNOTAVAIL", libc::EADDRNOTAVAIL),
    ("EIDRM", libc::EIDRM),
    ("ECOMM", libc::ECOMM),
    ("ESRMNT", libc::ESRMNT),
    ("EREMOTEIO", libc::EREMOTEIO),
    ("EL3RST", libc::EL3RST),
    ("EBADMSG", libc::EBADMSG),
    ("ENFILE", libc::ENFILE),
    ("ELIBMAX", libc::ELIBMAX),
    ("ESPIPE", libc::ESPIPE),
    ("ENOLINK", libc::ENOLINK),
    ("ENETRESET", libc::ENETRESET),
    ("ETIMEDOUT", libc::ETIMEDOUT),
    ("ENOENT", libc::ENOENT),
    ("EEXIST", libc::EEXIST),
    ("EDQUOT", libc::EDQUOT),
    ("ENOSTR", libc::ENOSTR),
    ("EBADSLT", libc::EBADSLT),
    ("EBADRQC", libc::EBADRQC),
    ("ELIBACC", libc::ELIBACC),
    ("EFAULT", libc::EFAULT),
    ("EFBIG", libc::EFBIG),
    ("EDEADLOCK", libc::EDEADLOCK),
    ("ENOTCONN", libc::ENOTCONN),
    ("EDESTADDRREQ", libc::EDESTADDRREQ),
    ("ELIBSCN", libc::ELIBSCN),
    ("ENOLCK", libc::ENOLCK),
    ("EISNAM", libc::EISNAM),
    ("ECONNABORTED", libc::ECONNABORTED),
    ("ENETUNREACH", libc::ENETUNREACH),
    ("ESTALE", libc::ESTALE),
    ("ENOSR", libc::ENOSR),
    ("ENOMEM", libc::ENOMEM),
    ("ENOTSOCK", libc::ENOTSOCK),
    ("ESTRPIPE", libc::ESTRPIPE),
    ("EMLINK", libc::EMLINK),
    ("ERANGE", libc::ERANGE),
    ("ELIBEXEC", libc::ELIBEXEC),
    ("EL3HLT", libc::EL3HLT),
    ("ECONNRESET", libc::ECONNRESET),
    ("EADDRINUSE", libc::EADDRINUSE),
    ("ENOTSUP", libc::ENOTSUP),
    ("EREMCHG", libc::EREMCHG),
    ("ENAMETOOLONG", libc::ENAMETOOLONG),
    ("ENOTTY", libc::ENOTTY),
    ("ERESTART", libc::ERESTART),
    ("ESOCKTNOSUPPORT", libc::ESOCKTNOSUPPORT),
    ("ETIME", libc::ETIME),
    ("EBFONT", libc::EBFONT),
    ("ETOOMANYREFS", libc::ETOOMANYREFS),
    ("EMFILE", libc::EMFILE),
    ("ETXTBSY", libc::ETXTBSY),
    ("EINPROGRESS", libc::EINPROGRESS),
    ("ENXIO", libc::ENXIO),
    ("ENOPKG", libc::ENOPKG),
    ("ENOMEDIUM", libc::ENOMEDIUM),
    ("EMEDIUMTYPE", libc::EMEDIUMTYPE),
    ("ECANCELED", libc::ECANCELED),
    ("ENOKEY", libc::ENOKEY),
    ("EKEYEXPIRED", libc::EKEYEXPIRED),
    ("EKEYREVOKED", libc::EKEYREVOKED),
    ("EKEYREJECTED", libc::EKEYREJECTED),
    ("EOWNERDEAD", libc::EOWNERDEAD),
    ("ENOTRECOVERABLE", libc::ENOTRECOVERABLE),
    ("ERFKILL", libc::ERFKILL),
];

#[cfg(not(target_os = "linux"))]
const ERROR_CODES: &[(&str, i32)] = &[];
